
@DECLARE_ID_int32_t_VAR
@$1_LITERAL

@ARRAY_INIT_MACROS_$1
    #BEGIN_RULE
        `#define INITS_$1(...) __VA_ARGS__ ` \n
        `#define INITS10_$1 INITS_$1(` @$1_CONSTANT `, ` @$1_CONSTANT `, ` @$1_CONSTANT `, `  @$1_CONSTANT `, `  @$1_CONSTANT `, ` @$1_CONSTANT `, ` @$1_CONSTANT `, ` @$1_CONSTANT `, `  @$1_CONSTANT `, `  @$1_CONSTANT  `)` \n
        `#define INITS100_$1 INITS_$1(INITS10_$1, INITS10_$1, INITS10_$1, INITS10_$1, INITS10_$1, INITS10_$1, INITS10_$1, INITS10_$1, INITS10_$1, INITS10_$1)` \n
        `#define INITS1000_$1 INITS_$1(INITS100_$1, INITS100_$1, INITS100_$1, INITS100_$1, INITS100_$1, INITS100_$1, INITS100_$1, INITS100_$1, INITS100_$1, INITS100_$1)` \n \n

    #END_RULE

@ARRAY_INIT_MACROS_10_$1
    #BEGIN_RULE
    #END_RULE

@DECLARE_$1_ARRAY_VAR
    #BEGIN_RULE
        #SET $1ArrayVarDeclared=$1ArrayVarDeclared+1
        `$1 ` @DECLARE_ID_$1_ARRAY_VAR `[` @ARRAY_MAX_LENGTH `];` \n
        `fillArray(`#GET_LAST_ID $1ArrayVar_`);` \n
    #END_RULE

@DECLARE_ID_$1_ARRAY_VAR
    #BEGIN_RULE
        #CREATE_ID $1ArrayVar_
    #END_RULE

@REUSE_ID_$1_ARRAY_VAR
    #BEGIN_RULE:$1ArrayVarDeclared
        #REUSE_ID $1ArrayVar_
    #END_RULE
    #BEGIN_RULE:2*$1ArrayFieldVarDeclared
        @REUSE_ID_$1_ARRAY_FIELD_VAR
    #END_RULE

@DECLARE_VAR_OF_TYPE
    #APPEND_RULE:50*Enable$1
        @DECLARE_$1_ARRAY_VAR
    #END_RULE

@DECLARE_$1_ARRAY_FIELD_VAR
    #BEGIN_RULE
        #SET $1ArrayFieldVarDeclared=$1ArrayFieldVarDeclared+1
        `$1 ` @DECLARE_ID_$1_ARRAY_FIELD_VAR `[1000] = {INITS1000_$1};` \n
    #END_RULE

@DECLARE_ID_$1_ARRAY_FIELD_VAR
    #BEGIN_RULE
        #CREATE_ID $1ArrayFieldVar_
    #END_RULE

@REUSE_ID_$1_ARRAY_FIELD_VAR
    #BEGIN_RULE
        `this->` #REUSE_ID $1ArrayFieldVar_
    #END_RULE

@DECLARE_FIELD_VAR_OF_TYPE
    #APPEND_RULE:20*Enable$1
        @DECLARE_$1_ARRAY_FIELD_VAR
    #END_RULE


// TODO: add pointers arrays

// @DECLARE_ID_int32_t_POINTER
// @DECLARE_$1_ARRAY_POINTER
//     #BEGIN_RULE
//         #SET $1ArrayPointerDeclared=$1ArrayPointerDeclared+1
//         ` $1 ` @DECLARE_ID_$1_ARRAY_POINTER `[` @ARRAY_MAX_LENGTH `];` \n
//         ` for (int32_t `#BEGIN_SCOPE   @DECLARE_ID_int32_t_POINTER ` = 0; `
//             #SET int32_tPointerDeclared=int32_tPointerDeclared+1
//             #GET_LAST_ID int32_tPointer_ ` < lengthArray(` #GET_LAST_ID $1ArrayPointer_ `); ` #GET_LAST_ID int32_tPointer_ `++) {` \n
//             #GET_LAST_ID $1ArrayPointer_ `[` #GET_LAST_ID int32_tPointer_ `] = ` @$1_LITERAL `; ` \n
//             `} `
//         #SET int32_tPointerDeclared=int32_tPointerDeclared+-1
//         #END_SCOPE \n
//     #END_RULE
//
// @DECLARE_ID_$1_ARRAY_POINTER
//     #BEGIN_RULE
//         #CREATE_ID $1ArrayPointer_
//     #END_RULE
//
// @REUSE_ID_$1_ARRAY_POINTER
//     #BEGIN_RULE:$1ArrayPointerDeclared*10
//         #REUSE_ID $1ArrayPointer_
//     #END_RULE
//
// @DECLARE_POINTER_OF_TYPE
//     #APPEND_RULE:0*Enable$1
//         @DECLARE_$1_ARRAY_POINTER
//     #END_RULE
