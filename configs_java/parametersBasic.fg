
//Keep EnableInt always equal to 1! Other types should be set to 1 or 0 only.
#SET Enableint=10
#SET Enableshort=2
#SET Enablebyte=5
#SET Enablelong=5
#SET Enablefloat=5
#SET Enabledouble=5
#SET EnableInteger=1
#SET EnableShort=1
#SET EnableByte=1
#SET EnableLong=1
#SET EnableFloat=1
#SET EnableDouble=1

#SET EnableString=2

#SET intIsPrimitiveType=1
#SET shortIsPrimitiveType=1
#SET byteIsPrimitiveType=1
#SET longIsPrimitiveType=1
#SET floatIsPrimitiveType=1
#SET doubleIsPrimitiveType=1
#SET IntegerIsPrimitiveType=0
#SET ShortIsPrimitiveType=0
#SET ByteIsPrimitiveType=0
#SET LongIsPrimitiveType=0
#SET FloatIsPrimitiveType=0
#SET DoubleIsPrimitiveType=0
#SET StringIsPrimitiveType=0

#SET intIsFloatingPointType=0
#SET shortIsFloatingPointType=0
#SET byteIsFloatingPointType=0
#SET longIsFloatingPointType=0
#SET floatIsFloatingPointType=1
#SET doubleIsFloatingPointType=1
#SET IntegerIsFloatingPointType=0
#SET ShortIsFloatingPointType=0
#SET ByteIsFloatingPointType=0
#SET LongIsFloatingPointType=0
#SET FloatIsFloatingPointType=1
#SET DoubleIsFloatingPointType=1

#SET intIsStringType=0
#SET shortIsStringType=0
#SET byteIsStringType=0
#SET longIsStringType=0
#SET floatIsStringType=0
#SET doubleIsStringType=0
#SET IntegerIsStringType=0
#SET ShortIsStringType=0
#SET ByteIsStringType=0
#SET LongIsStringType=0
#SET FloatIsStringType=0
#SET DoubleIsStringType=0
#SET StringIsStringType=1


#SET TestClass=0



//#SET MaxArrayCount=500

//#SET StatementProb=8
//#SET MaxLoopNest=4
#SET LoopNest=0
//#SET MaxLoopCount=50
#SET LoopCount=0


//#SET LoopCntLimitMin=10
//#SET LoopCntLimitMax=150

//#SET MaxCondCount=15
#SET CondCount=0
//#SET MaxCondNest=4
#SET CondNest=0

//#SET BinExprMaxDepth=3
//#SET ExprMaxDepth=3
//#SET ExprBlockMaxDepth=1

//#SET MaxLambdaCount=1
//#SET MaxListCount=2
//#SET MaxSetCount=2

//#SET MethodCallInExprWeight=3

//#SET MaxStatementsInMethodCount=30
#SET StatementsInMethodCount=0

#SET LambdaCount=0

#SET UknownZeroAssigned=0

//#SET SwitchMatch=-10

//#SET MaxSynchronizedBlockNestDepth=2
#SET SynchronizedBlockNestDepth=0

//#SET MaxLongLoop=1
//#SET MaxLongLoopDepth=2
#SET LongLoop=0
//#SET MaxLongLoopLength=2000

//#SET MaxTryCatchDepth=1
#SET TryCatchDepth=0

#SET Neq=0

//#SET MaxMethodsInClass=4
#SET MethodCallCount=0

//#SET MaxClasses=4
#SET ClassesCount=0

//#SET MaxExplicitCallsInMain=5
#SET ExplicitCallsInMain=0

//#SET MaxLoopNestForMethodCall=2

@SET_FLAGS_BEFORE_METHOD_
#BEGIN_RULE
#SET LoopCount=0
#SET LoopNest=0
#SET CondCount=0
#SET CondNest=0
#SET MethodCallCount=0
#SET LambdaCount=0

#SET StatementsInMethodCount=0
#SET SwitchMatch=-10
#SET MaxSynchronizedBlockNestDepth=2
#SET SynchronizedBlockNestDepth=0

#SET LongLoop=0

#END_RULE



 @IntegerToPrimitiveType
#BEGIN_RULE
    `int`
#END_RULE

@intToPrimitiveType
#BEGIN_RULE
    `int`
#END_RULE

@ByteToPrimitiveType
#BEGIN_RULE
    `byte`
#END_RULE

@byteToPrimitiveType
#BEGIN_RULE
    `byte`
#END_RULE

@ShortToPrimitiveType
#BEGIN_RULE
    `short`
#END_RULE

@shortToPrimitiveType
#BEGIN_RULE
    `short`
#END_RULE

@LongToPrimitiveType
#BEGIN_RULE
    `long`
#END_RULE

@longToPrimitiveType
#BEGIN_RULE
    `long`
#END_RULE

@FloatToPrimitiveType
#BEGIN_RULE
    `float`
#END_RULE

@floatToPrimitiveType
#BEGIN_RULE
    `float`
#END_RULE

@DoubleToPrimitiveType
#BEGIN_RULE
    `double`
#END_RULE


@StringToPrimitiveType
#BEGIN_RULE
    `String`
#END_RULE

@doubleToPrimitiveType
#BEGIN_RULE
    `double`
#END_RULE


 @IntegerToReferenceType
#BEGIN_RULE
    `Integer`
#END_RULE

@intToReferenceType
#BEGIN_RULE
    `Integer`
#END_RULE

@ByteToReferenceType
#BEGIN_RULE
    `Byte`
#END_RULE

@byteToReferenceType
#BEGIN_RULE
    `Byte`
#END_RULE

@ShortToReferenceType
#BEGIN_RULE
    `Short`
#END_RULE

@shortToReferenceType
#BEGIN_RULE
    `Short`
#END_RULE

@LongToReferenceType
#BEGIN_RULE
    `Long`
#END_RULE

@longToReferenceType
#BEGIN_RULE
    `Long`
#END_RULE

@FloatToReferenceType
#BEGIN_RULE
    `Float`
#END_RULE

@floatToReferenceType
#BEGIN_RULE
    `Float`
#END_RULE

@DoubleToReferenceType
#BEGIN_RULE
    `Double`
#END_RULE


@StringToReferenceType
#BEGIN_RULE
    `String`
#END_RULE

@doubleToReferenceType
#BEGIN_RULE
    `Double`
#END_RULE






 @IntegerToParseNumericType
#BEGIN_RULE
    `Int`
#END_RULE

@intToParseNumericType
#BEGIN_RULE
    `Int`
#END_RULE

@ByteToParseNumericType
#BEGIN_RULE
    `Byte`
#END_RULE

@byteToParseNumericType
#BEGIN_RULE
    `Byte`
#END_RULE

@ShortToParseNumericType
#BEGIN_RULE
    `Short`
#END_RULE

@shortToParseNumericType
#BEGIN_RULE
    `Short`
#END_RULE

@LongToParseNumericType
#BEGIN_RULE
    `Long`
#END_RULE

@longToParseNumericType
#BEGIN_RULE
    `Long`
#END_RULE

@FloatToParseNumericType
#BEGIN_RULE
    `Float`
#END_RULE

@floatToParseNumericType
#BEGIN_RULE
    `Float`
#END_RULE

@DoubleToParseNumericType
#BEGIN_RULE
    `Double`
#END_RULE


@StringToParseNumericType
#BEGIN_RULE
    `String`
#END_RULE

@doubleToParseNumericType
#BEGIN_RULE
    `Double`
#END_RULE







      @IntegerTointType
#BEGIN_RULE
    `(int)`
#END_RULE

@intTointType
#BEGIN_RULE
#END_RULE

@ByteTointType
#BEGIN_RULE
    `(int)(byte)`
#END_RULE

@byteTointType
#BEGIN_RULE
#END_RULE

@ShortTointType
#BEGIN_RULE
    `(int)(short)`
#END_RULE

@shortTointType
#BEGIN_RULE
#END_RULE

@LongTointType
#BEGIN_RULE
    `(int)(long)`
#END_RULE

@longTointType
#BEGIN_RULE
    `(int)`
#END_RULE

@FloatTointType
#BEGIN_RULE
    `(int)(Float)`
#END_RULE

@floatTointType
#BEGIN_RULE
    `(int)`
#END_RULE

@DoubleTointType
#BEGIN_RULE
    `(int)(double)`
#END_RULE

@doubleTointType
#BEGIN_RULE
    `(int)`
#END_RULE

#SET LimitCheckint=257
#SET LimitCheckshort=255
#SET LimitCheckbyte=127
#SET LimitChecklong=257
#SET LimitCheckfloat=259
#SET LimitCheckdouble=260
#SET LimitCheckInteger=257
#SET LimitCheckShort=255
#SET LimitCheckByte=127
#SET LimitCheckLong=258
#SET LimitCheckFloat=259
#SET LimitCheckDouble=260

